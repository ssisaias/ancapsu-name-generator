{"version":3,"sources":["features/mainpage/MainPage.js","app/store/nameList.js","app/App.js","reportWebVitals.js","index.js"],"names":["MainPage","useState","selectedName","setSelectedName","Grid","container","textAlign","style","height","verticalAlign","Column","maxWidth","Form","size","Button","onClick","namelist","item","Math","floor","random","length","color","fluid","Header","as","Message","App","width","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAIe,SAASA,IAEpB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAQA,OACG,mCACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,MAAO,CAAEC,OAAQ,QAAUC,cAAc,SAA5E,SACG,eAACL,EAAA,EAAKM,OAAN,CAAaH,MAAO,CAAEI,SAAU,KAAhC,UACA,cAACC,EAAA,EAAD,CAAMC,KAAK,QAAX,SAEI,cAACC,EAAA,EAAD,CAAQC,QAZpB,WACI,IAAMC,ECRD,CACT,6CACA,gBACA,eACA,oCACA,sCACA,4BACA,iCACA,8BACA,2BACA,8CACA,iCACA,qCACA,oBACA,4BACA,gBACA,0CACA,+BACA,iCACA,gBACA,sBACA,wCACA,uBACA,2CACA,mCACA,oBACA,2BACA,+BACA,kBACA,wBACA,iBACA,4BACA,2BDvBQC,EAAOD,EAASE,KAAKC,MAAMD,KAAKE,SAASJ,EAASK,SACtDlB,EAAgBc,IAS2BK,MAAM,SAASC,OAAK,EAACV,KAAK,QAA7D,qBAKJ,cAACW,EAAA,EAAD,CAAQC,GAAG,KAAKH,MAAM,QAAQhB,UAAU,SAAxC,kDAGA,cAACoB,EAAA,EAAD,UACIxB,WEVDyB,MAff,WAEE,OACE,qCACE,cAAC3B,EAAD,IAIA,cAACI,EAAA,EAAKM,OAAN,CAAaL,WAAS,EAACuB,MAAO,EAA9B,SACE,cAACJ,EAAA,EAAD,CAAQC,GAAG,KAAKH,MAAM,SAASO,QAAQ,4ECDhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d7f1f98e.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport { Button, Grid, Form, Message, Header } from 'semantic-ui-react';\nimport nameList from '../../app/store/nameList';\n\nexport default function MainPage(){\n    \n    const [selectedName, setSelectedName] = useState('');\n\n    function handleNameSelect(){\n        const namelist = nameList();\n        var item = namelist[Math.floor(Math.random()*namelist.length)]; //1st ans from stackoverflow\n        setSelectedName(item);\n    }\n\n    return(\n       <>\n         <Grid container textAlign='center' style={{ height: '30em' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n            <Form size='large'>\n                \n                <Button onClick={handleNameSelect} color='yellow' fluid size='large'>\n                    Gerar\n                </Button>\n                \n            </Form>\n            <Header as='h2' color='black' textAlign='center'>\n                Essa notícia foi sugerida por....\n            </Header>\n            <Message>\n               {selectedName}\n            </Message>\n            </Grid.Column>\n        </Grid>\n       </>\n    );\n}","export default function nameList(){\n    return   [\n    'Funcionário público do ancapistão', \n    'Eu amo hentai',\n    'Daniel Fraga',\n    'Servidor Público Libertário',\n    'Atropelo comunistas com meu Del Rey',\n    'John McAfee Libertário',\n    'Xandão, O Lex Luthor do STF',\n    'Bovino Gadoso Científico',\n    'Desbravador Autêntico',\n    'É muito engraçado no final das contas',\n    'Eu amo uma oppai bem moreninha',\n    'Daniel Fraga Deus do Ancapistão',\n    'Libertário mor',\n    'Hokage da quinta série',\n    'Pikachu Ancap',\n    'Peter, minha bisavó está solteira',\n    'Espermatozoide Libertário',\n    'Tarzão da Mata Atlântica',\n    'Neolibertario',\n    'Violonista Prateado',\n    'Grand Sir Owen Williams, o engenheiro',\n    'Ateu com Black Power',\n    'Ninguém, eu mesmo sugeri a notícia',\n    'Dedo mindinho renegado pelo Lula',\n    'Me nota senpai :3',\n    'Impressora do Ciro Gomes',\n    'Super Hétero Armamentista',\n    'Cabeça Livre',\n    'Ayn Rand de Minissaia',\n    'Gilete Amolado',\n    'Nação Libertária',\n    'Disjuntor Libertário'\n    ]\n}\n","import './App.css';\nimport MainPage from '../features/mainpage/MainPage';\nimport { Grid, Header } from 'semantic-ui-react';\n\nfunction App() {\n  \n  return (\n    <>\n      <MainPage>\n\n      </MainPage>\n\n      <Grid.Column container width={6}>\n        <Header as='h5' color='yellow' content='nano_137fc688z3qy8wt8s7yzrtj5uzx8zhgdz6o87yu6y3ycbsdyadxpsb7c1q8o' />\n      </Grid.Column>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}